#include <GL/glut.h>

GLfloat colors[100][3] = { //초기 색상
    { 1.0, 0.0, 0.0 }, { 1.0, 0.05, 0.0 }, { 1.0, 0.1, 0.0 }, { 1.0, 0.15, 0.0 }, { 1.0, 0.2, 0.0 },
    { 1.0, 0.25, 0.0 }, { 1.0, 0.3, 0.0 }, { 1.0, 0.35, 0.0 }, { 1.0, 0.4, 0.0 }, { 1.0, 0.45, 0.0 },
    { 1.0, 0.5, 0.0 }, { 1.0, 0.55, 0.0 }, { 1.0, 0.6, 0.0 }, { 1.0, 0.65, 0.0 }, { 1.0, 0.70, 0.0 },
    { 1.0, 0.75, 0.0 }, { 1.0, 0.80, 0.0 }, { 1.0, 0.85, 0.0 }, { 1.0, 0.90, 0.0 }, { 1.0, 0.95, 0.0 },
    { 1.0, 1.0, 0.0 }, { 0.95, 1.0, 0.0 }, { 0.9, 1.0, 0.0 }, { 0.85, 1.0, 0.0 }, { 0.8, 1.0, 0.0 },
    { 0.75, 1.0, 0.0 }, { 0.7, 1.0, 0.0 }, { 0.65, 1.0, 0.0 }, { 0.6, 1.0, 0.0 }, { 0.55, 1.0, 0.0 },
    { 0.5, 1.0, 0.0 }, { 0.45, 1.0, 0.0 }, { 0.4, 1.0, 0.0 }, { 0.35, 1.0, 0.0 }, { 0.3, 1.0, 0.0 },
    { 0.25, 1.0, 0.0 }, { 0.2, 1.0, 0.0 }, { 0.15, 1.0, 0.0 }, { 0.1, 1.0, 0.0 }, { 0.05, 1.0, 0.0 },
    { 0.0, 1.0, 0.0 }, { 0.0, 0.95, 0.0 }, { 0.0, 0.9, 0.0 }, { 0.0, 0.85, 0.0 }, { 0.0, 0.8, 0.0 }, 
    { 0.0, 0.75, 0.0 }, { 0.0, 0.7, 0.0 }, { 0.0, 0.65, 0.0 }, { 0.0, 0.6, 0.0 }, { 0.0, 0.55, 0.0 },
    { 0.0, 0.5, 0.0 }, { 0.0, 0.45, 0.0 }, { 0.0, 0.4, 0.0 }, { 0.0, 0.35, 0.0 }, { 0.0, 0.3, 0.0 },
    { 0.0, 0.25, 0.0 }, { 0.0, 0.2, 0.0 }, { 0.0, 0.15, 0.0 }, { 0.0, 0.1, 0.0 }, { 0.0, 0.5, 0.0 },
    { 0.0, 0.0, 1.0 }, { 0.05, 0.0, 1.0 }, { 0.1, 0.0, 1.0 }, { 0.15, 0.0, 1.0 }, { 0.2, 0.0, 1.0 },
    { 0.25, 0.0, 1.0 }, { 0.3, 0.0, 1.0 }, { 0.35, 0.0, 1.0 }, { 0.4, 0.0, 1.0 }, { 0.45, 0.0, 1.0 },
    { 0.5, 0.0, 1.0 }, { 0.55, 0.0, 1.0 }, { 0.6, 0.0, 1.0 }, { 0.65, 0.0, 1.0 }, { 0.7, 0.0, 1.0 },
    { 0.75, 0.0, 1.0 }, { 0.80, 0.0, 1.0 }, { 0.85, 0.0, 1.0 }, { 0.9, 0.0, 1.0 }, { 0.95, 0.0, 1.0 },
    { 1.0, 0.0, 1.0 }, { 1.0, 0.0, 0.95 }, { 1.0, 0.0, 0.9 }, { 1.0, 0.0, 0.85 }, { 1.0, 0.0, 0.8 },
    { 1.0, 0.0, 0.75 }, { 1.0, 0.0, 0.7 }, { 1.0, 0.0, 0.65 }, { 1.0, 0.0, 0.6 }, { 1.0, 0.0, 0.55 },
    { 1.0, 0.0, 0.5 }, { 1.0, 0.0, 0.45 }, { 1.0, 0.0, 0.4 }, { 1.0, 0.0, 0.35 }, { 1.0, 0.0, 0.3 },
    { 1.0, 0.0, 0.25 }, { 1.0, 0.0, 0.2 }, { 1.0, 0.0, 0.15 }, { 1.0, 0.0, 0.1 }, { 1.0, 0.0, 0.05 }
};

GLfloat c = 0.03; //색이 변하는 것에 영향을 줄 변수
int mode = 0;
void one_rectangle(int line, GLfloat x) { // 한 줄을 그리는 함수, line은 몇번째줄인지를 의미하고, x는 줄의 x좌표를 의미
    //도형 그리기시작
    glBegin(GL_POLYGON); //평면의 사각형을 그리기 위해서, GL_POLYGON 으로 선정 

    if (mode == 0) { //빨강 -> 노랑으로 변경하는 모드, 노랑이 도달할 때까지 값을 변경
        colors[line][1] = colors[line][1] + c;
        if (colors[line][1] >= 1) mode = 1; //노랑에 도달하면 다음 단계로 넘어감 (mode = 1)
    }
    else if (mode == 1) { //노랑 -> 초록
        colors[line][0] = colors[line][0] - c;
        if (colors[line][0] <= 0) mode = 2;
    }
    else if (mode == 2) { //초록 -> 파랑
        colors[line][1] = colors[line][1] - c;
        colors[line][2] = colors[line][2] + c;
        if (colors[line][1] <= 0 && colors[line][2] >= 1) mode = 3;
    }
    else if (mode == 3) { // 파랑 -> 보라
        colors[line][0] = colors[line][0] + c;
        if (colors[line][0] >= 1) mode = 4;
    }
    else if (mode == 4) {// 보라 -> 빨강
        colors[line][2] = colors[line][2] - c;
        if (colors[line][2] <= 0) mode = 0; //다시 모드 0으로 돌아가서 무한 재생
    }

    glColor3f(colors[line][0], colors[line][1], colors[line][2]); //색상을 (r,g,b)로 설정
    glVertex3f(x, -0.5, 0.0); //사각형의 꼭짓점 1
    glVertex3f(x+0.01, -0.5, 0.0); //사각형의 꼭짓점 2
    glVertex3f(x+0.01, 0.5, 0.0); //사각형의 꼭짓점 3
    glVertex3f(x, 0.5, 0.0); //사각형의 꼭짓점 4

    glEnd();
    //도형 그리기 끝
}

void MyDisplay() {
    int i;
    float x = -0.5;

    glClear(GL_COLOR_BUFFER_BIT);
    //for문을 이용하여 도형을 여러개 그리고 이어붙이면, 하나의 면처럼 보이는 효과가 있을것
    for (i = 0; i < 100; i++) { //도형을 100개 그리기
        one_rectangle(i, x);
        x += 0.01;
    }

    glutSwapBuffers();
}

void MyTimer(int Value) {
    glutPostRedisplay(); //새로 다시 그리기
    glutTimerFunc(50, MyTimer, 1); //50ms 후에 같은 함수를 또 호출하여 무한루프
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
    glutInitWindowSize(600, 600); //600x600 크기의 창으로 띄우도록함
    glutInitWindowPosition(0, 0); //결과창이 뜨는 좌표는 (0, 0)
    glutCreateWindow("OpenGL Drawing Example");
    glClearColor(1.0, 1.0, 1.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-1.0, 1.0, -1.0, 1.0, 1.0, -1.0);
    glutDisplayFunc(MyDisplay); //GLUT 콜백함수 등록
    glutTimerFunc(50, MyTimer, 1); //50ms 후에 MyTimer 함수를 호출
    glutMainLoop();
    return 0;
}
